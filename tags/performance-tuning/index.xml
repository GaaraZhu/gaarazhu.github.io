<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Performance tuning on Gary&#39;s Blog</title>
    <link>https://GaaraZhu.github.io/tags/performance-tuning/</link>
    <description>Recent content in Performance tuning on Gary&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>sec.gary@gmail.com (GaryZhu)</managingEditor>
    <webMaster>sec.gary@gmail.com (GaryZhu)</webMaster>
    <lastBuildDate>Fri, 02 Oct 2015 15:29:15 +1300</lastBuildDate><atom:link href="https://GaaraZhu.github.io/tags/performance-tuning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tail call optimization in Scala</title>
      <link>https://GaaraZhu.github.io/tail-call-optimization/</link>
      <pubDate>Fri, 02 Oct 2015 15:29:15 +1300</pubDate>
      <author>sec.gary@gmail.com (GaryZhu)</author>
      <guid>https://GaaraZhu.github.io/tail-call-optimization/</guid>
      <description>Recursion provides us an clean way to solve some algorithm problems. But one drawback of it is the memory cost caused by recursion call stack, especially for memory sensitive applications like mobile applications.</description>
    </item>
    
    <item>
      <title>MapReduce tuning</title>
      <link>https://GaaraZhu.github.io/map-reduce-tunning/</link>
      <pubDate>Sun, 23 Dec 2012 01:33:45 +1300</pubDate>
      <author>sec.gary@gmail.com (GaryZhu)</author>
      <guid>https://GaaraZhu.github.io/map-reduce-tunning/</guid>
      <description>Backgroup MapReduce is not a low latency computing model, minutes at least will go before we got the result. But this does not mean there&amp;rsquo;s no way for us to make it faster.</description>
    </item>
    
  </channel>
</rss>
